@import url("https://fonts.googleapis.com/css2?family=Lato:wght@300&display=swap");

/* Create CSS Properties */
:root {
  --primary-color: #047aed;
  --secondary-color: #1c3fa8;
  --dark-color: #002240;
  --light-color: #f4f4f4;
}
/* --------------------------------------------------- */
/* Reset */
* {
  /* to ensure all the container using webpage size and control margin and padding easily */
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

/* --------------------------------------------------- */

body {
  font-family: "Lato", sans-serif;
  color: #333;
  /* line-height to spread things out lil bit */
  line-height: 1.6;
}

ul {
  /* for without any bullet point */
  list-style-type: none;
}

a {
  /* to remove ugly underline on the link */
  text-decoration: none;
  color: #333;
}

/* setup the headings */
h1,
h2 {
  /* for making less bold */
  font-weight: 300;
  /* line-height for making pretty look */
  line-height: 1.2;
  /* setup margin top and bottom 10px and left right 0px */
  margin: 10px 0;
}

/* setup paragraph similiar to headings */
p {
  margin: 10px 0;
}

/* set the images that has width similiar to the parent container */
img {
  width: 100%;
}

/* Navbar Styling */
.navbar ul {
  display: flex;
}

/* styling the nav bar*/
.navbar {
  background-color: var(--primary-color);
  color: #fff;
  height: 70px;
}

/*  set the link into white color in the navbar   */
.navbar a {
  color: #fff;
  /* make a break on each items */
  padding: 10px;
  margin: 0 5px;
}

/* create a hover effect on the navbar */
.navbar a:hover {
  border-bottom: 2px #fff solid;
}

/* if flex in the navbar, so it would be using space-between */
.navbar .flex {
  justify-content: space-between;
}

/* Showcase */
.showcase {
  height: 400px;
  background-color: var(--primary-color);
  color: #fff;
  position: relative;
}

.showcase h1 {
  /* to set the fontsize bigger for showcase */
  font-size: 40px;
}
.showcase p {
  margin: 20px 0;
}

.showcase .grid {
  /* make it approach by percentage as the container grid */
  grid-template-columns: 55% 45%;
  gap: 30px;
  /* to setup the card height visible above showcase grid container */
  overflow: visible;
}

.showcase-form {
  /* setup & styling the form */
  /* relative to make this at the top of property */
  position: relative;
  /* to push down */
  top: 60px;
  height: 350px;
  width: 400px;
  padding: 40px;
  /* to ensure the card always position himself at the front */
  z-index: 100;
  /* to push the form to the right */
  justify-self: flex-end;
}

/* setup form control that wrap the input */
.showcase-form .form-control {
  /* separate the form */
  margin: 30px 0;
}

/* style the actual input and the button with targeting only input type "text and "email"*/
.showcase-form input[type="text"],
.showcase-form input[type="email"] {
  /* taking away the border */
  border: 0;
  /* instead changing just styled border bottom */
  border-bottom: 1px solid #b4becb;
  /* set the width into 100% so its go all the way across parent container */
  width: 100%;
  padding: 3px;
  font-size: 16px;
}

/* taking out the original format of border when click input */
.showcase-form input:focus {
  outline: none;
}

/* Create the slice part: instead of adding new element on the html, we setup the pseoudo character */
.showcas::before,
.showcase::after {
  content: "";
  position: absolute;
  height: 100px;
  bottom: -70px;
  right: 0;
  left: 0;
  background: #fff;
  transform: skewY(-3deg);
  /* to occupy all web type and model, we setup prefix version the transform into several media webkit */
  /* for Chrome and Safari */
  -webkit-transform: skewY(-3deg);
  /* for Mozila */
  -moz-transform: skewY(-3deg);
  /* microsoft */
  -ms-transform: skewY(-3deg);
}
/* --------------------------------------------------- */
/* Stats */
.stats {
  padding-top: 100px;
}

.stats-heading {
  /* to squize in the middle from major container */
  max-width: 500px;
  margin: auto;
}
/* decoring the stats h3 and paragraph */
.stats .grid h3 {
  font-size: 35px;
}

.stats .grid p {
  font-size: 20px;
  font-weight: bold;
}

/* cli */
.cli .grid {
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(2, 1fr);
}

/* to expand the cli image on first 2 row and two colom */
/* using this ">" bracket to target everything(*) that in(:) the first-child */
.cli .grid > *:first-child {
  /* this grid column will fill from 1 and span untul column 2 */
  grid-column: 1 / span 2;
  /* then targeting the second part is spaning row */
  grid-row: 1 / span 2;
}

/* Cloud */
.cloud .grid {
  grid-template-columns: 4fr 3fr;
}
